version: '3.0'

services:
  db:
    image: postgres:latest
    container_name: db
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "3432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: "trust"

  innoter-api:
    build: .
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - innotter/.env
    ports:
      - "8000:8000"
    restart: on-failure
    command: bash -c "python innotter/manage.py migrate && python innotter/manage.py runserver 0.0.0.0:8000"

  redis:
      image: redis:7.0-alpine
      container_name: redis
      expose:
        - 6379
      ports:
        - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    depends_on:
      - db

  celery:
    restart: always
    build:
      context: .
    entrypoint: celery -A innotter worker --loglevel=info -E
    env_file:
      - innotter/.env
    depends_on:
      - rabbitmq
      - innoter-api

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
      - celery
